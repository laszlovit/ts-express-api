name: Vercel Preview Deployment

on:
  push:
    branches-ignore:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Match this with your development environment's Node version

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Run tests
      - name: Run Tests
        run: npm test
        env:
          MONGO_URI_TEST: ${{ secrets.MONGO_URI_TEST }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          FIREBASE_AUTH_TOKEN: ${{ secrets.FIREBASE_AUTH_TOKEN }}
          FIREBASE_WEB_API_KEY: ${{ secrets.FIREBASE_WEB_API_KEY }}

  deploy:
    needs: test # This job runs only if the 'test' job completes successfully
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup Node.js environment again for this job
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install --global vercel

      # Pull Vercel Environment Information
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      # Build Project Artifacts
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      # Deploy Project Artifacts
      - name: Deploy Project Artifacts
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
